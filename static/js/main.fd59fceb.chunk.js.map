{"version":3,"sources":["Weather/weatherCard.js","Weather/temp.js","App.js","index.js"],"names":["WeatherCard","tempInfo","React","useState","weatherState","setWeatherState","temp","humidity","pressure","weathermood","name","speed","country","sunset","useEffect","date","Date","timestr","getHours","getMinutes","getSeconds","className","toLocaleString","Temp","searchValue","setSearchValue","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd59fceb.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst WeatherCard = ({ tempInfo }) => {\r\n  const [weatherState, setWeatherState] = React.useState(\"\");\r\n\r\n  const {\r\n    temp,\r\n    humidity,\r\n    pressure,\r\n    weathermood,\r\n    name,\r\n    speed,\r\n    country,\r\n    sunset,\r\n  } = tempInfo;\r\n\r\n  useEffect(() => {\r\n    if (weathermood) {\r\n      switch (weathermood) {\r\n        case \"Clouds\":\r\n          setWeatherState(\"wi-day-cloudy\");\r\n          break;\r\n        case \"Clear\":\r\n          setWeatherState(\"wi-day-sunny\");\r\n          break;\r\n        case \"Haze\":\r\n          setWeatherState(\"wi-fog\");\r\n          break;\r\n        case \"Rain\":\r\n          setWeatherState(\"wi-rain\");\r\n          break;\r\n        case \"Mist\":\r\n          setWeatherState(\"wi-dust\");\r\n          break;\r\n        case \"Thunderstorm\":\r\n          setWeatherState(\"wi-thunderstorm\");\r\n          break;\r\n        case \"Hail\":\r\n          setWeatherState(\"wi-hail\");\r\n          break;\r\n        case \"Snow\":\r\n          setWeatherState(\"wi-snow\");\r\n          break;\r\n        case \"Fog\":\r\n          setWeatherState(\"wi-fog\");\r\n          break;\r\n        case \"Flood\":\r\n          setWeatherState(\"wi-flood\");\r\n          break;\r\n\r\n        default:\r\n          setWeatherState(\"wi-day-sunny\");\r\n          break;\r\n      }\r\n    }\r\n  }, [weathermood]);\r\n\r\n  //   converting sunset seconds into time\r\n  let sec = sunset;\r\n  let date = new Date(sec * 1000);\r\n  let timestr = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n  return (\r\n    <>\r\n      <article className=\"widget\">\r\n        <div className=\"weatherIcon\">\r\n          <i className={`${weatherState}`}></i>\r\n        </div>\r\n\r\n        <div className=\"weatherInfo\">\r\n          <div className=\"temperature\">\r\n            <span>{temp}&deg;</span>\r\n          </div>\r\n\r\n          <div className=\"description\">\r\n            <div className=\"weatherCondition\">{weathermood}</div>\r\n            <div className=\"place\">\r\n              {name}, {country}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"date\">{new Date().toLocaleString()}</div>\r\n\r\n        {/* our four column section */}\r\n        <div className=\"extra-temp\">\r\n          <div className=\"temp-info-minmax\">\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-sunset\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {timestr} PM\r\n                <br /> Sunset\r\n              </p>\r\n            </div>\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-humidity\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {humidity}\r\n                <br /> Humidity\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"weather-extra-info\">\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-rain\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {pressure}\r\n                <br /> Pressure\r\n              </p>\r\n            </div>\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-strong-wind\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {speed} <br /> Speed\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","// api.openweathermap.org/data/2.5/weather?q=pune&appid=22ab33e76d688471f73bddb208ab689b\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport WeatherCard from \"./weatherCard\";\r\nimport \"./style.css\";\r\n\r\nconst Temp = () => {\r\n  const [searchValue, setSearchValue] = useState(\"pune\");\r\n  const [tempInfo, setTempInfo] = useState({});\r\n\r\n  const getWeatherInfo = async () => {\r\n    try {\r\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=22ab33e76d688471f73bddb208ab689b`;\r\n\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n\r\n      const { temp, humidity, pressure } = data.main;\r\n      const { main: weathermood } = data.weather[0];\r\n      const { name } = data;\r\n      const { speed } = data.wind;\r\n      const { country, sunset } = data.sys;\r\n\r\n      const myNewWeatherInfo = {\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        weathermood,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunset,\r\n      };\r\n\r\n      setTempInfo(myNewWeatherInfo);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWeatherInfo();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"wrap\">\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Enter City\"\r\n            autoFocus\r\n            id=\"search\"\r\n            className=\"searchTerm\"\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n          />\r\n          <button\r\n            className=\"searchButton\"\r\n            type=\"button\"\r\n            onClick={getWeatherInfo}\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* our temp card */}\r\n      <WeatherCard tempInfo={tempInfo}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Temp;\r\n","import './App.css';\nimport Temp from './Weather/temp';\n\nfunction App() {\n  return (\n    <>\n      <Temp/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}